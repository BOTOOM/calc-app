{"version":3,"sources":["components/Button/index.tsx","App.tsx","components/Functions.tsx","components/Numbers.tsx","components/MathOperations.tsx","components/Result.tsx","index.tsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onClickNumber","number","onContentClear","onDelete","newStack","substring","onClickOperation","operation","onClickEqual","equal","eval","toString","Functions","numbers","Numbers","map","key","renderButtons","MathOperations","Result","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"yGAAA,0BAiBeA,IANY,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAd,OACvB,4BAAQC,UAAWH,EAAMI,QAAS,kBAAMF,EAAaD,KACjD,8BAAOA,M,qiCCJTI,IAAU,SAAVA,MAAiB,IAAD,UAEQC,oDAAS,IAFjB,+LAEXC,MAFW,cAEJC,SAFI,cAIZC,MAAQC,oDAAMH,MAAO,gBAErBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,IAEzD,OACA,mEAAMT,UAAU,oBACZ,2DAAC,kDAAD,CAAQQ,MAAOA,QACf,2DAAC,mDAAD,CAASE,cAAe,SAAAC,GAAM,OAAIN,SAAS,GAAD,OAAID,OAAJ,OAAYO,OACtD,2DAAC,qDAAD,CACIC,eAAgB,kBAAMP,SAAS,KAC/BQ,SAAU,WACN,GAAIT,MAAMK,OAAS,EAAG,CAClB,IAAMK,EAAWV,MAAMW,UAAU,EAAGX,MAAMK,OAAS,GACnDJ,SAASS,OAIrB,2DAAC,0DAAD,CACIE,iBAAkB,SAAAC,GAAS,OAAIZ,SAAS,GAAD,OAAID,OAAJ,OAAYa,KACnDC,aAAc,sBAAAC,OAAK,OAAId,SAASe,KAAKhB,OAAOiB,iBAKzCnB,2B,8BCrCf,2BAeeoB,IAPe,SAAC,GAAD,IAAEV,EAAF,EAAEA,eAAgBC,EAAlB,EAAkBA,SAAlB,OAC1B,6BAASb,UAAU,aACf,kBAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAca,IAC3D,kBAAC,IAAD,CAAQd,KAAK,SAASC,aAAcc,O,6BCX5C,2BAIMU,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA6B7BC,IARY,SAAC,GAAD,IAAGd,EAAH,EAAGA,cAAH,OACvB,6BAASV,UAAU,WApBD,SAACU,GAYnB,OAAOa,EAAQE,KAPM,SAACd,GAAD,OACjB,kBAAC,IAAD,CACIe,IAAKf,EACLb,KAAMa,EAAOU,WACbtB,aAAcW,OAadiB,CAAcjB,M,6BC5B1B,2BAkBekB,IAVoB,SAAC,GAAD,IAAEZ,EAAF,EAAEA,iBAAkBE,EAApB,EAAoBA,aAApB,OAC/B,6BAASlB,UAAU,mBACf,kBAAC,IAAD,CAAQF,KAAK,IAAIC,aAAciB,IAC/B,kBAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,kBAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,kBAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,kBAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAcmB,O,6BCdvC,oBAMMW,EAAmB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAH,OACrB,yBAAKR,UAAU,UACVQ,IAITqB,EAAOC,aAAe,CACnBtB,MAAO,KAGKqB,O,8BChBf,kDAIAE,IAASC,OAAO,kBAAC,IAAD,MACZC,SAASC,eAAe,U","file":"static/js/main.7da74410.chunk.js","sourcesContent":["import React, {FC} from 'react'\r\nimport './Button.css'\r\n\r\nexport type ButtonClickHandler = (text: string) => void \r\n\r\ntype Props = {\r\n    type?: string, \r\n    text: string, \r\n    clickHandler: ButtonClickHandler\r\n}\r\n\r\nconst Button : FC<Props> = ({type, text, clickHandler}) => (\r\n    <button className={type} onClick={() => clickHandler(text)}>\r\n        <span>{text}</span>\r\n    </button>\r\n)\r\n\r\nexport default Button\r\n","/* eslint no-eval: 0 */\r\nimport React, { useState, FC } from 'react'\r\nimport words from 'lodash.words'\r\nimport Functions from './components/Functions'\r\nimport Numbers from './components/Numbers'\r\nimport MathOperations from './components/MathOperations'\r\nimport Result from './components/Result'\r\nimport './App.css'\r\n\r\nconst App: FC = () => {\r\n\r\n    const [stack, setStack] = useState(\"\")\r\n\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n\r\n    const value = items.length > 0 ? items[items.length-1] : \"0\";\r\n\r\n    return (\r\n    <main className='react-calculator'>\r\n        <Result value={value} />\r\n        <Numbers onClickNumber={number => setStack(`${stack}${number}`)} />\r\n        <Functions \r\n            onContentClear={() => setStack('')}\r\n            onDelete={() => {\r\n                if (stack.length > 0) {\r\n                    const newStack = stack.substring(0, stack.length - 1)\r\n                    setStack(newStack)\r\n                }\r\n            }}\r\n        />\r\n        <MathOperations \r\n            onClickOperation={operation => setStack(`${stack}${operation}`)} \r\n            onClickEqual={equal => setStack(eval(stack).toString())}\r\n        />\r\n    </main>)\r\n}\r\n\r\nexport default App\r\n\r\n","import React, {FC} from 'react'\r\nimport Button, { ButtonClickHandler } from './Button'\r\n\r\ntype Props = {\r\n    onContentClear: ButtonClickHandler,\r\n    onDelete: ButtonClickHandler\r\n}\r\n\r\nconst Functions : FC<Props> = ({onContentClear, onDelete}) => (\r\n    <section className=\"functions\">\r\n        <Button type=\"button-long-text\" text=\"clear\" clickHandler={onContentClear} />\r\n        <Button text=\"&larr;\" clickHandler={onDelete} />\r\n    </section>\r\n)\r\n\r\nexport default Functions","import React, {FC} from 'react'\r\nimport Button, { ButtonClickHandler } from './Button'\r\n\r\n// DRY: Don't repeat yourself\r\nconst numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0]\r\n\r\nconst renderButtons = (onClickNumber : ButtonClickHandler) => {\r\n    // var number = 0\r\n    // iterar desde el bot√≥n 1 al 0 (while, for, foreach)\r\n    // var ArrayComponentes += \r\n    //<Button text={number.toString()} clickHandler={onClickNumber} />\r\n    const renderButton = (number : number) => (\r\n        <Button \r\n            key={number} \r\n            text={number.toString()} \r\n            clickHandler={onClickNumber} \r\n        />\r\n    )\r\n    return numbers.map(renderButton)\r\n}\r\n\r\ntype Props = {\r\n    onClickNumber: ButtonClickHandler\r\n}\r\n\r\nconst Numbers: FC<Props> = ({ onClickNumber }) => (\r\n    <section className=\"numbers\">\r\n        {\r\n            renderButtons(onClickNumber)\r\n        }\r\n    </section>\r\n)\r\n\r\nexport default Numbers;","import React, {FC} from 'react'\r\nimport Button, { ButtonClickHandler } from './Button'\r\n\r\ntype Props = {\r\n    onClickOperation: ButtonClickHandler, \r\n    onClickEqual: ButtonClickHandler\r\n}\r\n\r\nconst MathOperations : FC<Props> = ({onClickOperation, onClickEqual}) => (\r\n    <section className=\"math-operations\">\r\n        <Button text=\"+\" clickHandler={onClickOperation} />\r\n        <Button text=\"-\" clickHandler={onClickOperation} />\r\n        <Button text=\"*\" clickHandler={onClickOperation} />\r\n        <Button text=\"/\" clickHandler={onClickOperation} />\r\n        <Button text=\"=\" clickHandler={onClickEqual} />\r\n    </section>\r\n)\r\n\r\nexport default MathOperations","import React, { FC } from 'react'\r\n\r\ntype Prop = {\r\n    value: string\r\n}\r\n\r\nconst Result: FC<Prop> = ({ value }) => (\r\n    <div className=\"result\">\r\n        {value}\r\n    </div>\r\n)\r\n\r\nResult.defaultProps = {\r\n   value: \"0\"\r\n}\r\n\r\nexport default Result","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,                                    \r\n    document.getElementById('root'))"],"sourceRoot":""}